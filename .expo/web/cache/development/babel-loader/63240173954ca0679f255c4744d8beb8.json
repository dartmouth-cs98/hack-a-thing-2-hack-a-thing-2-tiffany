{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/tiffany/Documents/hack-a-thing-2/app/screens/AnnouncementScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { withOrientation } from 'react-navigation';\nimport colors from \"../config/colors\";\nimport announcement from \"./Announcement\";\n\nvar AnnouncementScreen = function (_Component) {\n  _inherits(AnnouncementScreen, _Component);\n\n  var _super = _createSuper(AnnouncementScreen);\n\n  function AnnouncementScreen(props) {\n    var _this;\n\n    _classCallCheck(this, AnnouncementScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      noteArray: [],\n      noteText: ''\n    };\n    return _this;\n  }\n\n  _createClass(AnnouncementScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.header,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.headerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }\n      }, \" ~ANNOUNCEMENTS~ \")), React.createElement(ScrollView, {\n        style: styles.scrollContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: styles.footer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, React.createElement(TextInput, {\n        style: styles.TextInput,\n        onChangeText: function onChangeText(noteText) {\n          return _this2.setState({\n            noteText: noteText\n          });\n        },\n        value: this.state.noteText,\n        placeholder: \"Type announcement here\",\n        placeholderTextColor: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: addNote,\n        style: styles.addButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.addButtonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, \"+\")));\n    }\n  }]);\n\n  return AnnouncementScreen;\n}(Component);\n\nfunction addNote() {\n  alert(\"add note\");\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  header: {\n    backgroundColor: colors.primary,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderBottomWidth: 5,\n    borderBottomColor: colors.secondary\n  },\n  headerText: {\n    color: \"white\",\n    fontSize: 20,\n    padding: 10\n  },\n  scrollContainer: {\n    flex: 1,\n    marginBottom: 100\n  },\n  footer: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0\n  },\n  TextInput: {\n    alignSelf: \"stretch\",\n    color: \"white\",\n    padding: 40,\n    backgroundColor: colors.primary\n  },\n  addButton: {\n    position: \"absolute\",\n    right: 20,\n    bottom: 60,\n    backgroundColor: colors.secondary,\n    width: 75,\n    height: 75,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    elevation: 10,\n    zIndex: 20,\n    borderRadius: 50\n  },\n  addButtonText: {\n    color: \"white\",\n    fontSize: 30\n  }\n});\nexport default AnnouncementScreen;","map":{"version":3,"sources":["/Users/tiffany/Documents/hack-a-thing-2/app/screens/AnnouncementScreen.js"],"names":["React","Component","withOrientation","colors","announcement","AnnouncementScreen","props","state","noteArray","noteText","styles","container","header","headerText","scrollContainer","footer","TextInput","setState","addNote","addButton","addButtonText","alert","StyleSheet","create","flex","backgroundColor","primary","alignItems","justifyContent","borderBottomWidth","borderBottomColor","secondary","color","fontSize","padding","marginBottom","position","bottom","left","right","alignSelf","width","height","elevation","zIndex","borderRadius"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;;;;AAEA,SAASC,eAAT,QAAgC,kBAAhC;AAEA,OAAOC,MAAP;AACA,OAAOC,YAAP;;IAEMC,kB;;;;;AAEF,8BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAFe;AAMlB;;;;6BAEQ;AAAA;;AACL,aACA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAIC,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAID,MAAM,CAACE,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAIF,MAAM,CAACG,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CADJ,EAII,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAIH,MAAM,CAACI,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAQI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAIJ,MAAM,CAACK,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACI,QAAA,KAAK,EAAIL,MAAM,CAACM,SADpB;AAEI,QAAA,YAAY,EAAE,sBAACP,QAAD;AAAA,iBAAc,MAAI,CAACQ,QAAL,CAAc;AAACR,YAAAA,QAAQ,EAARA;AAAD,WAAd,CAAd;AAAA,SAFlB;AAGI,QAAA,KAAK,EAAI,KAAKF,KAAL,CAAWE,QAHxB;AAII,QAAA,WAAW,EAAG,wBAJlB;AAKI,QAAA,oBAAoB,EAAG,OAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CARJ,EAkBI,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAGS,OAA5B;AAAsC,QAAA,KAAK,EAAIR,MAAM,CAACS,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAIT,MAAM,CAACU,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CAlBJ,CADA;AAwBH;;;;EAnC4BnB,S;;AAuCjC,SAASiB,OAAT,GAAmB;AACfG,EAAAA,KAAK,CAAC,UAAD,CAAL;AACH;;AAKD,IAAMX,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC7BZ,EAAAA,SAAS,EAAE;AACPa,IAAAA,IAAI,EAAE;AADC,GADkB;AAK7BZ,EAAAA,MAAM,EAAE;AACJa,IAAAA,eAAe,EAAEtB,MAAM,CAACuB,OADpB;AAEJC,IAAAA,UAAU,EAAE,QAFR;AAGJC,IAAAA,cAAc,EAAE,QAHZ;AAIJC,IAAAA,iBAAiB,EAAE,CAJf;AAKJC,IAAAA,iBAAiB,EAAE3B,MAAM,CAAC4B;AALtB,GALqB;AAY7BlB,EAAAA,UAAU,EAAE;AACRmB,IAAAA,KAAK,EAAE,OADC;AAERC,IAAAA,QAAQ,EAAE,EAFF;AAGRC,IAAAA,OAAO,EAAE;AAHD,GAZiB;AAiB7BpB,EAAAA,eAAe,EAAE;AACbU,IAAAA,IAAI,EAAE,CADO;AAEbW,IAAAA,YAAY,EAAE;AAFD,GAjBY;AAqB7BpB,EAAAA,MAAM,EAAE;AACJqB,IAAAA,QAAQ,EAAE,UADN;AAEJC,IAAAA,MAAM,EAAE,CAFJ;AAGJC,IAAAA,IAAI,EAAE,CAHF;AAIJC,IAAAA,KAAK,EAAE;AAJH,GArBqB;AA2B7BvB,EAAAA,SAAS,EAAG;AACRwB,IAAAA,SAAS,EAAE,SADH;AAERR,IAAAA,KAAK,EAAE,OAFC;AAGRE,IAAAA,OAAO,EAAE,EAHD;AAIRT,IAAAA,eAAe,EAAEtB,MAAM,CAACuB;AAJhB,GA3BiB;AAiC7BP,EAAAA,SAAS,EAAG;AACRiB,IAAAA,QAAQ,EAAE,UADF;AAERG,IAAAA,KAAK,EAAE,EAFC;AAGRF,IAAAA,MAAM,EAAE,EAHA;AAIRZ,IAAAA,eAAe,EAAEtB,MAAM,CAAC4B,SAJhB;AAKRU,IAAAA,KAAK,EAAE,EALC;AAMRC,IAAAA,MAAM,EAAE,EANA;AAORf,IAAAA,UAAU,EAAE,QAPJ;AAQRC,IAAAA,cAAc,EAAE,QARR;AASRe,IAAAA,SAAS,EAAE,EATH;AAURC,IAAAA,MAAM,EAAE,EAVA;AAWRC,IAAAA,YAAY,EAAE;AAXN,GAjCiB;AA8C7BzB,EAAAA,aAAa,EAAE;AACXY,IAAAA,KAAK,EAAE,OADI;AAEXC,IAAAA,QAAQ,EAAE;AAFC;AA9Cc,CAAlB,CAAf;AAmDA,eAAe5B,kBAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Text, View, Button, StyleSheet, TextInput, ScrollView, TouchableOpacity} from 'react-native';\nimport { withOrientation } from 'react-navigation';\n\nimport colors from '../config/colors';\nimport announcement from './Announcement';\n\nclass AnnouncementScreen extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            noteArray: [],\n            noteText: '',\n        };\n    };\n\n    render (){\n        return(\n        <View style = {styles.container}>\n            <View style = {styles.header}>\n                <Text style = {styles.headerText}> ~ANNOUNCEMENTS~ </Text>\n            </View>\n            <ScrollView style = {styles.scrollContainer}>\n    \n            </ScrollView>\n    \n            <View style = {styles.footer}>\n                <TextInput\n                    style = {styles.TextInput}\n                    onChangeText={(noteText) => this.setState({noteText})}\n                    value = {this.state.noteText}\n                    placeholder = \"Type announcement here\"\n                    placeholderTextColor = \"white\"\n                ></TextInput>\n    \n            </View>\n            <TouchableOpacity onPress={ addNote } style = {styles.addButton}>\n                <Text style = {styles.addButtonText}>+</Text>\n            </TouchableOpacity>\n        </View>\n        );\n    };\n\n}\n\nfunction addNote() {\n    alert(\"add note\");\n}\n\n// function AnnouncementScreen() {\n// };\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n\n    header: {\n        backgroundColor: colors.primary,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        borderBottomWidth: 5,\n        borderBottomColor: colors.secondary,\n    },\n    headerText: {\n        color: \"white\",\n        fontSize: 20,\n        padding: 10,\n    },\n    scrollContainer: {\n        flex: 1,\n        marginBottom: 100,\n    },\n    footer: {\n        position: \"absolute\",\n        bottom: 0,\n        left: 0,\n        right: 0,\n    },\n    TextInput : {\n        alignSelf: \"stretch\",\n        color: \"white\",\n        padding: 40,\n        backgroundColor: colors.primary,\n    },\n    addButton : {\n        position: \"absolute\",\n        right: 20,\n        bottom: 60,\n        backgroundColor: colors.secondary,\n        width: 75,\n        height: 75,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        elevation: 10,\n        zIndex: 20,\n        borderRadius: 50,\n    },\n    addButtonText: {\n        color: \"white\",\n        fontSize: 30,\n    },\n})\nexport default AnnouncementScreen;"]},"metadata":{},"sourceType":"module"}